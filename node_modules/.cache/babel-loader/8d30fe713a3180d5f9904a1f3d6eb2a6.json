{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomWord = exports.ZERO_WORD = exports.toWord = void 0;\n\nconst binary_1 = require(\"./binary\");\n\nfunction toWord(value) {\n  let hex;\n\n  if (value.startsWith(\"0x\")) {\n    hex = value.substring(2).toLowerCase();\n  } else {\n    hex = value.toLowerCase();\n  }\n\n  const re = /[0-9a-f]{64}/g;\n\n  if (re.test(hex)) {\n    return `0x${hex}`;\n  } else {\n    throw new Error(`not a word: ${value}`);\n  }\n}\n\nexports.toWord = toWord;\nexports.ZERO_WORD = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\nfunction randomWord() {\n  return toWord(binary_1.randomBinary(32));\n}\n\nexports.randomWord = randomWord;","map":{"version":3,"sources":["/home/abhishek/Code/nft-template/node_modules/@rarible/types/build/word.js"],"names":["Object","defineProperty","exports","value","randomWord","ZERO_WORD","toWord","binary_1","require","hex","startsWith","substring","toLowerCase","re","test","Error","randomBinary"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,MAAR,GAAiB,KAAK,CAA/D;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,SAASF,MAAT,CAAgBH,KAAhB,EAAuB;AACnB,MAAIM,GAAJ;;AACA,MAAIN,KAAK,CAACO,UAAN,CAAiB,IAAjB,CAAJ,EAA4B;AACxBD,IAAAA,GAAG,GAAGN,KAAK,CAACQ,SAAN,CAAgB,CAAhB,EAAmBC,WAAnB,EAAN;AACH,GAFD,MAGK;AACDH,IAAAA,GAAG,GAAGN,KAAK,CAACS,WAAN,EAAN;AACH;;AACD,QAAMC,EAAE,GAAG,eAAX;;AACA,MAAIA,EAAE,CAACC,IAAH,CAAQL,GAAR,CAAJ,EAAkB;AACd,WAAQ,KAAIA,GAAI,EAAhB;AACH,GAFD,MAGK;AACD,UAAM,IAAIM,KAAJ,CAAW,eAAcZ,KAAM,EAA/B,CAAN;AACH;AACJ;;AACDD,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACAJ,OAAO,CAACG,SAAR,GAAoB,oEAApB;;AACA,SAASD,UAAT,GAAsB;AAClB,SAAOE,MAAM,CAACC,QAAQ,CAACS,YAAT,CAAsB,EAAtB,CAAD,CAAb;AACH;;AACDd,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomWord = exports.ZERO_WORD = exports.toWord = void 0;\nconst binary_1 = require(\"./binary\");\nfunction toWord(value) {\n    let hex;\n    if (value.startsWith(\"0x\")) {\n        hex = value.substring(2).toLowerCase();\n    }\n    else {\n        hex = value.toLowerCase();\n    }\n    const re = /[0-9a-f]{64}/g;\n    if (re.test(hex)) {\n        return `0x${hex}`;\n    }\n    else {\n        throw new Error(`not a word: ${value}`);\n    }\n}\nexports.toWord = toWord;\nexports.ZERO_WORD = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nfunction randomWord() {\n    return toWord(binary_1.randomBinary(32));\n}\nexports.randomWord = randomWord;\n"]},"metadata":{},"sourceType":"script"}