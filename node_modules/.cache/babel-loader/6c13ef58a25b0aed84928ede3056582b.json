{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assetTypeToStruct = void 0;\n\nvar abi_1 = require(\"./abi\");\n\nvar id_1 = require(\"../common/id\");\n\nfunction assetTypeToStruct(assetType) {\n  switch (assetType.assetClass) {\n    case \"ETH\":\n      return {\n        assetClass: ETH,\n        data: \"0x\"\n      };\n\n    case \"ERC20\":\n      return {\n        assetClass: ERC20,\n        data: abi_1.abi.encodeParameter(\"address\", assetType.contract)\n      };\n\n    case \"ERC721\":\n      return {\n        assetClass: ERC721,\n        data: abi_1.abi.encodeParameter({\n          root: CONTRACT_TOKEN_ID\n        }, {\n          contract: assetType.contract,\n          tokenId: assetType.tokenId\n        })\n      };\n\n    case \"ERC1155\":\n      return {\n        assetClass: ERC1155,\n        data: abi_1.abi.encodeParameter({\n          root: CONTRACT_TOKEN_ID\n        }, {\n          contract: assetType.contract,\n          tokenId: assetType.tokenId\n        })\n      };\n\n    case \"ERC721_LAZY\":\n      {\n        var encoded = abi_1.abi.encodeParameter(ERC721_LAZY_TYPE, {\n          contract: assetType.contract,\n          data: {\n            tokenId: assetType.tokenId,\n            uri: assetType.uri,\n            creators: assetType.creators,\n            royalties: assetType.royalties,\n            signatures: assetType.signatures\n          }\n        });\n        return {\n          assetClass: ERC721_LAZY,\n          data: \"0x\" + encoded.substring(66)\n        };\n      }\n\n    case \"ERC1155_LAZY\":\n      {\n        var encoded = abi_1.abi.encodeParameter(ERC1155_LAZY_TYPE, {\n          contract: assetType.contract,\n          data: {\n            tokenId: assetType.tokenId,\n            uri: assetType.uri,\n            supply: assetType.supply,\n            creators: assetType.creators,\n            royalties: assetType.royalties,\n            signatures: assetType.signatures\n          }\n        });\n        return {\n          assetClass: ERC1155_LAZY,\n          data: \"0x\" + encoded.substring(66)\n        };\n      }\n  }\n\n  throw new Error(\"Unsupported asset class: \" + assetType.assetClass);\n}\n\nexports.assetTypeToStruct = assetTypeToStruct;\nvar ETH = id_1.id(\"ETH\");\nvar ERC20 = id_1.id(\"ERC20\");\nvar ERC721 = id_1.id(\"ERC721\");\nvar ERC1155 = id_1.id(\"ERC1155\");\nvar ERC721_LAZY = id_1.id(\"ERC721_LAZY\");\nvar ERC1155_LAZY = id_1.id(\"ERC1155_LAZY\");\nvar CONTRACT_TOKEN_ID = {\n  contract: \"address\",\n  tokenId: \"uint256\"\n};\nvar ERC721_LAZY_TYPE = {\n  \"components\": [{\n    \"name\": \"contract\",\n    \"type\": \"address\"\n  }, {\n    \"components\": [{\n      \"name\": \"tokenId\",\n      \"type\": \"uint256\"\n    }, {\n      \"name\": \"uri\",\n      \"type\": \"string\"\n    }, {\n      \"components\": [{\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }, {\n        \"name\": \"value\",\n        \"type\": \"uint96\"\n      }],\n      \"name\": \"creators\",\n      \"type\": \"tuple[]\"\n    }, {\n      \"components\": [{\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }, {\n        \"name\": \"value\",\n        \"type\": \"uint96\"\n      }],\n      \"name\": \"royalties\",\n      \"type\": \"tuple[]\"\n    }, {\n      \"name\": \"signatures\",\n      \"type\": \"bytes[]\"\n    }],\n    \"name\": \"data\",\n    \"type\": \"tuple\"\n  }],\n  \"name\": \"data\",\n  \"type\": \"tuple\"\n};\nvar ERC1155_LAZY_TYPE = {\n  \"components\": [{\n    \"name\": \"contract\",\n    \"type\": \"address\"\n  }, {\n    \"components\": [{\n      \"name\": \"tokenId\",\n      \"type\": \"uint256\"\n    }, {\n      \"name\": \"uri\",\n      \"type\": \"string\"\n    }, {\n      \"name\": \"supply\",\n      \"type\": \"uint256\"\n    }, {\n      \"components\": [{\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }, {\n        \"name\": \"value\",\n        \"type\": \"uint96\"\n      }],\n      \"name\": \"creators\",\n      \"type\": \"tuple[]\"\n    }, {\n      \"components\": [{\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }, {\n        \"name\": \"value\",\n        \"type\": \"uint96\"\n      }],\n      \"name\": \"royalties\",\n      \"type\": \"tuple[]\"\n    }, {\n      \"name\": \"signatures\",\n      \"type\": \"bytes[]\"\n    }],\n    \"name\": \"data\",\n    \"type\": \"tuple\"\n  }],\n  \"name\": \"data\",\n  \"type\": \"tuple\"\n};","map":{"version":3,"sources":["/home/abhishek/Code/nft-template/node_modules/@rarible/protocol-ethereum-sdk/build/order/asset-type-to-struct.js"],"names":["Object","defineProperty","exports","value","assetTypeToStruct","abi_1","require","id_1","assetType","assetClass","ETH","data","ERC20","abi","encodeParameter","contract","ERC721","root","CONTRACT_TOKEN_ID","tokenId","ERC1155","encoded","ERC721_LAZY_TYPE","uri","creators","royalties","signatures","ERC721_LAZY","substring","ERC1155_LAZY_TYPE","supply","ERC1155_LAZY","Error","id"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assetTypeToStruct = void 0;\nvar abi_1 = require(\"./abi\");\nvar id_1 = require(\"../common/id\");\nfunction assetTypeToStruct(assetType) {\n    switch (assetType.assetClass) {\n        case \"ETH\":\n            return {\n                assetClass: ETH,\n                data: \"0x\",\n            };\n        case \"ERC20\":\n            return {\n                assetClass: ERC20,\n                data: abi_1.abi.encodeParameter(\"address\", assetType.contract),\n            };\n        case \"ERC721\":\n            return {\n                assetClass: ERC721,\n                data: abi_1.abi.encodeParameter({ root: CONTRACT_TOKEN_ID }, { contract: assetType.contract, tokenId: assetType.tokenId }),\n            };\n        case \"ERC1155\":\n            return {\n                assetClass: ERC1155,\n                data: abi_1.abi.encodeParameter({ root: CONTRACT_TOKEN_ID }, { contract: assetType.contract, tokenId: assetType.tokenId }),\n            };\n        case \"ERC721_LAZY\": {\n            var encoded = abi_1.abi.encodeParameter(ERC721_LAZY_TYPE, {\n                contract: assetType.contract,\n                data: {\n                    tokenId: assetType.tokenId,\n                    uri: assetType.uri,\n                    creators: assetType.creators,\n                    royalties: assetType.royalties,\n                    signatures: assetType.signatures,\n                },\n            });\n            return {\n                assetClass: ERC721_LAZY,\n                data: \"0x\" + encoded.substring(66),\n            };\n        }\n        case \"ERC1155_LAZY\": {\n            var encoded = abi_1.abi.encodeParameter(ERC1155_LAZY_TYPE, {\n                contract: assetType.contract,\n                data: {\n                    tokenId: assetType.tokenId,\n                    uri: assetType.uri,\n                    supply: assetType.supply,\n                    creators: assetType.creators,\n                    royalties: assetType.royalties,\n                    signatures: assetType.signatures,\n                },\n            });\n            return {\n                assetClass: ERC1155_LAZY,\n                data: \"0x\" + encoded.substring(66),\n            };\n        }\n    }\n    throw new Error(\"Unsupported asset class: \" + assetType.assetClass);\n}\nexports.assetTypeToStruct = assetTypeToStruct;\nvar ETH = id_1.id(\"ETH\");\nvar ERC20 = id_1.id(\"ERC20\");\nvar ERC721 = id_1.id(\"ERC721\");\nvar ERC1155 = id_1.id(\"ERC1155\");\nvar ERC721_LAZY = id_1.id(\"ERC721_LAZY\");\nvar ERC1155_LAZY = id_1.id(\"ERC1155_LAZY\");\nvar CONTRACT_TOKEN_ID = {\n    contract: \"address\",\n    tokenId: \"uint256\",\n};\nvar ERC721_LAZY_TYPE = {\n    \"components\": [\n        {\n            \"name\": \"contract\",\n            \"type\": \"address\",\n        },\n        {\n            \"components\": [\n                {\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\",\n                },\n                {\n                    \"name\": \"uri\",\n                    \"type\": \"string\",\n                },\n                {\n                    \"components\": [\n                        {\n                            \"name\": \"account\",\n                            \"type\": \"address\",\n                        },\n                        {\n                            \"name\": \"value\",\n                            \"type\": \"uint96\",\n                        },\n                    ],\n                    \"name\": \"creators\",\n                    \"type\": \"tuple[]\",\n                },\n                {\n                    \"components\": [\n                        {\n                            \"name\": \"account\",\n                            \"type\": \"address\",\n                        },\n                        {\n                            \"name\": \"value\",\n                            \"type\": \"uint96\",\n                        },\n                    ],\n                    \"name\": \"royalties\",\n                    \"type\": \"tuple[]\",\n                },\n                {\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes[]\"\n                }\n            ],\n            \"name\": \"data\",\n            \"type\": \"tuple\",\n        },\n    ],\n    \"name\": \"data\",\n    \"type\": \"tuple\",\n};\nvar ERC1155_LAZY_TYPE = {\n    \"components\": [\n        {\n            \"name\": \"contract\",\n            \"type\": \"address\",\n        },\n        {\n            \"components\": [\n                {\n                    \"name\": \"tokenId\",\n                    \"type\": \"uint256\",\n                },\n                {\n                    \"name\": \"uri\",\n                    \"type\": \"string\",\n                },\n                {\n                    \"name\": \"supply\",\n                    \"type\": \"uint256\",\n                },\n                {\n                    \"components\": [\n                        {\n                            \"name\": \"account\",\n                            \"type\": \"address\",\n                        },\n                        {\n                            \"name\": \"value\",\n                            \"type\": \"uint96\",\n                        },\n                    ],\n                    \"name\": \"creators\",\n                    \"type\": \"tuple[]\",\n                },\n                {\n                    \"components\": [\n                        {\n                            \"name\": \"account\",\n                            \"type\": \"address\",\n                        },\n                        {\n                            \"name\": \"value\",\n                            \"type\": \"uint96\",\n                        },\n                    ],\n                    \"name\": \"royalties\",\n                    \"type\": \"tuple[]\",\n                },\n                {\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes[]\"\n                }\n            ],\n            \"name\": \"data\",\n            \"type\": \"tuple\",\n        },\n    ],\n    \"name\": \"data\",\n    \"type\": \"tuple\",\n};\n"]},"metadata":{},"sourceType":"script"}