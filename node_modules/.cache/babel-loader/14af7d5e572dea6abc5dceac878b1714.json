{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Code/nft-template/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Home from './pages/home';\nimport Collection from './pages/collection';\nimport Web3 from \"web3\";\nimport { createRaribleSdk, RaribleSdk } from \"@rarible/protocol-ethereum-sdk\";\nimport React from 'react';\nimport { Web3Ethereum } from \"@rarible/web3-ethereum\"; // import Html404 from './pages/html404'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NETWORK = \"rinkeby\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      provider: null,\n      accounts: [],\n      sdk: null\n    };\n  }\n\n  componentWillMount() {\n    // this.setState({ message: \"This is an updated message\" });\n    console.log(\"Component is Mounting\");\n    this.useEffect();\n  }\n\n  useEffect() {\n    if (window.ethereum) {\n      this.handleInit();\n      console.log(\"going in if\");\n    } else {\n      window.addEventListener('ethereum#initialized', this.handleInit, {\n        once: true\n      });\n      setTimeout(this.handleInit, 3000); // 3 seconds\n    }\n  }\n\n  async setProvider(currentProvider) {\n    this.setState({\n      provider: currentProvider\n    }); // console.log(this.state.provider);\n  }\n\n  async setAccounts(accounts) {\n    this.setState({\n      accounts: accounts\n    }); // console.log(this.state.provider);\n  }\n\n  async setSdk(currentSdk) {\n    this.setState({\n      sdk: currentSdk\n    });\n  }\n\n  handleInit() {\n    console.log(true);\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum && ethereum.isMetaMask) {\n      console.log('Ethereum successfully detected!');\n      this.setProvider(ethereum); // add listener on accountsChanged event to render actual address\n      // ethereum.on('accountsChanged', this.state.accounts)\n\n      ethereum.on('accountsChanged', function (accounts) {\n        this.setAccounts(accounts);\n      });\n      console.log(this.state.accounts); // // configure web3\n\n      const web3 = new Web3(ethereum); // // configure raribleSdk\n\n      const raribleSdk = createRaribleSdk(new Web3Ethereum({\n        web3\n      }), NETWORK);\n      this.setSdk(raribleSdk);\n      console.log(this.state.sdk); // // set current account if already connected\n      // web3.eth.getAccounts().then(e => {\n      // \tsetAccounts(e)\n      // })\n    } else {\n      console.log('Please install MetaMask!');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n} // function App() {\n//   return (\n//     <div>\n//       <Home />\n//       {/* <Html404 /> */}\n//     </div>\n//   )\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/home/abhishek/Code/nft-template/src/App.js"],"names":["Home","Collection","Web3","createRaribleSdk","RaribleSdk","React","Web3Ethereum","NETWORK","App","Component","constructor","props","state","provider","accounts","sdk","componentWillMount","console","log","useEffect","window","ethereum","handleInit","addEventListener","once","setTimeout","setProvider","currentProvider","setState","setAccounts","setSdk","currentSdk","isMetaMask","on","web3","raribleSdk","render"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home'\nimport Collection from './pages/collection';\nimport Web3 from \"web3\"\nimport { createRaribleSdk, RaribleSdk } from \"@rarible/protocol-ethereum-sdk\"\nimport React from 'react'\nimport { Web3Ethereum } from \"@rarible/web3-ethereum\"\n\n// import Html404 from './pages/html404'\n\nconst NETWORK = \"rinkeby\"\n\nclass App extends React.Component {\n\n\n  constructor(props){\n    super(props)\n    this.state = {\n\n      provider : null,\n      accounts : [],\n      sdk:null,\n\n    }\n  }\n\n\n  componentWillMount() {\n\n    // this.setState({ message: \"This is an updated message\" });\n    console.log(\"Component is Mounting\")\n    this.useEffect()\n\n}\n\n  useEffect(){\n\n    if (window.ethereum) {\n\t\t\tthis.handleInit()\n      console.log(\"going in if\")\n\t\t} else {\n\t\t\twindow.addEventListener('ethereum#initialized', this.handleInit, {\n\t\t\t\tonce: true,\n\t\t\t})\n\t\t\tsetTimeout(this.handleInit, 3000) // 3 seconds\n\t\t}\n\n  }\n\n\n  async setProvider(currentProvider){\n    this.setState({ provider: currentProvider });\n    // console.log(this.state.provider);\n  }\n\n\n  async setAccounts(accounts){\n    this.setState({ accounts: accounts });\n    // console.log(this.state.provider);\n  }\n\n\n  async setSdk(currentSdk){\n      this.setState({ sdk : currentSdk })\n  }\n\n  handleInit(){\n    console.log(true)\n    const { ethereum } = window\n\t\tif (ethereum && ethereum.isMetaMask) {\n\t\t\tconsole.log('Ethereum successfully detected!')\n\t\t\tthis.setProvider(ethereum)\n\n\t\t\t// add listener on accountsChanged event to render actual address\n\t\t\t// ethereum.on('accountsChanged', this.state.accounts)\n      ethereum.on('accountsChanged', function (accounts) {this.setAccounts(accounts)\n    });\n      console.log(this.state.accounts)\n\t\t\t// // configure web3\n\t\t\tconst web3 = new Web3(ethereum)\n\t\t\t// // configure raribleSdk\n\t\t\tconst raribleSdk = createRaribleSdk(new Web3Ethereum({ web3 }), NETWORK)\n\t\t\tthis.setSdk(raribleSdk)\n      console.log(this.state.sdk)\n\t\t\t// // set current account if already connected\n\t\t\t// web3.eth.getAccounts().then(e => {\n\t\t\t// \tsetAccounts(e)\n\t\t\t// })\n\t\t} else {\n\t\t\tconsole.log('Please install MetaMask!')\n\t\t}\n  }\n\n  render() {\n    return (\n      <div>\n      <Home />\n      {/* <Html404 /> */}\n\n    </div>\n    )\n  }  \n\n}\n\n\n// function App() {\n\n//   return (\n\n//     <div>\n//       <Home />\n//       {/* <Html404 /> */}\n\n//     </div>\n//   )\n\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}