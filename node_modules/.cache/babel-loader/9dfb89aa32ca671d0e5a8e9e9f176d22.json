{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar jitter_factory_1 = require(\"../jitter/jitter.factory\");\n\nvar Delay =\n/** @class */\nfunction () {\n  function Delay(options) {\n    this.options = options;\n    this.attempt = 0;\n  }\n\n  Delay.prototype.apply = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, _this.jitteredDelay);\n    });\n  };\n\n  Delay.prototype.setAttemptNumber = function (attempt) {\n    this.attempt = attempt;\n  };\n\n  Object.defineProperty(Delay.prototype, \"jitteredDelay\", {\n    get: function () {\n      var jitter = jitter_factory_1.JitterFactory(this.options);\n      return jitter(this.delay);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Delay.prototype, \"delay\", {\n    get: function () {\n      var constant = this.options.startingDelay;\n      var base = this.options.timeMultiple;\n      var power = this.numOfDelayedAttempts;\n      var delay = constant * Math.pow(base, power);\n      return Math.min(delay, this.options.maxDelay);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Delay.prototype, \"numOfDelayedAttempts\", {\n    get: function () {\n      return this.attempt;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Delay;\n}();\n\nexports.Delay = Delay;","map":{"version":3,"sources":["../../src/delay/delay.base.ts"],"names":[],"mappings":";;;;;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAEA,IAAA,KAAA;AAAA;AAAA,YAAA;AAEE,WAAA,KAAA,CAAoB,OAApB,EAA4C;AAAxB,SAAA,OAAA,GAAA,OAAA;AADV,SAAA,OAAA,GAAU,CAAV;AACsC;;AAEzC,EAAA,KAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,IAAI,OAAJ,CAAY,UAAA,OAAA,EAAO;AAAI,aAAA,UAAU,CAAC,OAAD,EAAU,KAAI,CAAxB,aAAU,CAAV;AAAuC,KAA9D,CAAP;AACD,GAFM;;AAIA,EAAA,KAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,OAAxB,EAAuC;AACrC,SAAK,OAAL,GAAe,OAAf;AACD,GAFM;;AAIP,EAAA,MAAA,CAAA,cAAA,CAAY,KAAA,CAAA,SAAZ,EAAY,eAAZ,EAAyB;SAAzB,YAAA;AACE,UAAM,MAAM,GAAG,gBAAA,CAAA,aAAA,CAAc,KAAK,OAAnB,CAAf;AACA,aAAO,MAAM,CAAC,KAAK,KAAN,CAAb;AACD,KAHwB;oBAAA;;AAAA,GAAzB;AAKA,EAAA,MAAA,CAAA,cAAA,CAAY,KAAA,CAAA,SAAZ,EAAY,OAAZ,EAAiB;SAAjB,YAAA;AACE,UAAM,QAAQ,GAAG,KAAK,OAAL,CAAa,aAA9B;AACA,UAAM,IAAI,GAAG,KAAK,OAAL,CAAa,YAA1B;AACA,UAAM,KAAK,GAAG,KAAK,oBAAnB;AACA,UAAM,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,KAAf,CAAzB;AAEA,aAAO,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,KAAK,OAAL,CAAa,QAA7B,CAAP;AACD,KAPgB;oBAAA;;AAAA,GAAjB;AASA,EAAA,MAAA,CAAA,cAAA,CAAc,KAAA,CAAA,SAAd,EAAc,sBAAd,EAAkC;SAAlC,YAAA;AACE,aAAO,KAAK,OAAZ;AACD,KAFiC;oBAAA;;AAAA,GAAlC;AAGF,SAAA,KAAA;AAAC,CA7BD,EAAA;;AAAsB,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar jitter_factory_1 = require(\"../jitter/jitter.factory\");\nvar Delay = /** @class */ (function () {\n    function Delay(options) {\n        this.options = options;\n        this.attempt = 0;\n    }\n    Delay.prototype.apply = function () {\n        var _this = this;\n        return new Promise(function (resolve) { return setTimeout(resolve, _this.jitteredDelay); });\n    };\n    Delay.prototype.setAttemptNumber = function (attempt) {\n        this.attempt = attempt;\n    };\n    Object.defineProperty(Delay.prototype, \"jitteredDelay\", {\n        get: function () {\n            var jitter = jitter_factory_1.JitterFactory(this.options);\n            return jitter(this.delay);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Delay.prototype, \"delay\", {\n        get: function () {\n            var constant = this.options.startingDelay;\n            var base = this.options.timeMultiple;\n            var power = this.numOfDelayedAttempts;\n            var delay = constant * Math.pow(base, power);\n            return Math.min(delay, this.options.maxDelay);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Delay.prototype, \"numOfDelayedAttempts\", {\n        get: function () {\n            return this.attempt;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Delay;\n}());\nexports.Delay = Delay;\n//# sourceMappingURL=delay.base.js.map"]},"metadata":{},"sourceType":"script"}