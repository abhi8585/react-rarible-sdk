"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createGanacheProvider = void 0;
var ethereumjs_wallet_1 = __importDefault(require("ethereumjs-wallet"));
var ganache_core_1 = __importDefault(require("ganache-core"));
var types_1 = require("@rarible/types");
function createGanacheProvider() {
    var pk = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        pk[_i] = arguments[_i];
    }
    var wallets;
    if (pk.length > 0) {
        wallets = pk.map(function (single) { return new ethereumjs_wallet_1.default(Buffer.from(single, "hex")); });
    }
    else {
        wallets = Array.from(Array(10).keys())
            .map(function (pk) { return new ethereumjs_wallet_1.default(Buffer.from(types_1.randomWord().substring(2), "hex")); });
    }
    var accounts = wallets
        .map(function (wallet) { return ({ secretKey: wallet.getPrivateKey(), balance: "0x1000000000000000000000000000" }); });
    var provider = ganache_core_1.default.provider({
        accounts: accounts,
        // @ts-ignore
        _chainIdRpc: 17
    });
    afterAll(function () {
        provider.close(function () { });
    });
    return {
        provider: provider,
        wallets: wallets,
        addresses: wallets.map(function (w) { return types_1.toAddress(w.getAddressString()); })
    };
}
exports.createGanacheProvider = createGanacheProvider;
