import { Asset, Part } from "@rarible/protocol-api-client";
import { Address } from "@rarible/types";
import { Action } from "@rarible/action";
import { Ethereum } from "@rarible/ethereum-provider";
import { ExchangeAddresses } from "../config/type";
import { SimpleOrder } from "./sign-order";
import { GetMakeFeeFunction } from "./get-make-fee";
export declare type FillOrderRequest = {
    amount: number;
    payouts?: Array<Part>;
    originFees?: Array<Part>;
    infinite?: boolean;
};
export declare type FillOrderStageId = "approve" | "send-tx";
export declare type FillOrderFunction = () => Promise<Action<FillOrderStageId, [string | undefined, string]>>;
export declare function fillOrder(getMakeFee: GetMakeFeeFunction, ethereum: Ethereum, approve: (owner: Address, asset: Asset, infinite: boolean) => Promise<string | undefined>, config: ExchangeAddresses, order: SimpleOrder, request: FillOrderRequest): Promise<Action<FillOrderStageId, [string | undefined, string]>>;
export declare function fillOrderSendTx(getMakeFee: GetMakeFeeFunction, ethereum: Ethereum, config: ExchangeAddresses, order: SimpleOrder, request: FillOrderRequest): Promise<string>;
