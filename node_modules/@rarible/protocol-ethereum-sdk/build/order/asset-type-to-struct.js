"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assetTypeToStruct = void 0;
var abi_1 = require("./abi");
var id_1 = require("../common/id");
function assetTypeToStruct(assetType) {
    switch (assetType.assetClass) {
        case "ETH":
            return {
                assetClass: ETH,
                data: "0x",
            };
        case "ERC20":
            return {
                assetClass: ERC20,
                data: abi_1.abi.encodeParameter("address", assetType.contract),
            };
        case "ERC721":
            return {
                assetClass: ERC721,
                data: abi_1.abi.encodeParameter({ root: CONTRACT_TOKEN_ID }, { contract: assetType.contract, tokenId: assetType.tokenId }),
            };
        case "ERC1155":
            return {
                assetClass: ERC1155,
                data: abi_1.abi.encodeParameter({ root: CONTRACT_TOKEN_ID }, { contract: assetType.contract, tokenId: assetType.tokenId }),
            };
        case "ERC721_LAZY": {
            var encoded = abi_1.abi.encodeParameter(ERC721_LAZY_TYPE, {
                contract: assetType.contract,
                data: {
                    tokenId: assetType.tokenId,
                    uri: assetType.uri,
                    creators: assetType.creators,
                    royalties: assetType.royalties,
                    signatures: assetType.signatures,
                },
            });
            return {
                assetClass: ERC721_LAZY,
                data: "0x" + encoded.substring(66),
            };
        }
        case "ERC1155_LAZY": {
            var encoded = abi_1.abi.encodeParameter(ERC1155_LAZY_TYPE, {
                contract: assetType.contract,
                data: {
                    tokenId: assetType.tokenId,
                    uri: assetType.uri,
                    supply: assetType.supply,
                    creators: assetType.creators,
                    royalties: assetType.royalties,
                    signatures: assetType.signatures,
                },
            });
            return {
                assetClass: ERC1155_LAZY,
                data: "0x" + encoded.substring(66),
            };
        }
    }
    throw new Error("Unsupported asset class: " + assetType.assetClass);
}
exports.assetTypeToStruct = assetTypeToStruct;
var ETH = id_1.id("ETH");
var ERC20 = id_1.id("ERC20");
var ERC721 = id_1.id("ERC721");
var ERC1155 = id_1.id("ERC1155");
var ERC721_LAZY = id_1.id("ERC721_LAZY");
var ERC1155_LAZY = id_1.id("ERC1155_LAZY");
var CONTRACT_TOKEN_ID = {
    contract: "address",
    tokenId: "uint256",
};
var ERC721_LAZY_TYPE = {
    "components": [
        {
            "name": "contract",
            "type": "address",
        },
        {
            "components": [
                {
                    "name": "tokenId",
                    "type": "uint256",
                },
                {
                    "name": "uri",
                    "type": "string",
                },
                {
                    "components": [
                        {
                            "name": "account",
                            "type": "address",
                        },
                        {
                            "name": "value",
                            "type": "uint96",
                        },
                    ],
                    "name": "creators",
                    "type": "tuple[]",
                },
                {
                    "components": [
                        {
                            "name": "account",
                            "type": "address",
                        },
                        {
                            "name": "value",
                            "type": "uint96",
                        },
                    ],
                    "name": "royalties",
                    "type": "tuple[]",
                },
                {
                    "name": "signatures",
                    "type": "bytes[]"
                }
            ],
            "name": "data",
            "type": "tuple",
        },
    ],
    "name": "data",
    "type": "tuple",
};
var ERC1155_LAZY_TYPE = {
    "components": [
        {
            "name": "contract",
            "type": "address",
        },
        {
            "components": [
                {
                    "name": "tokenId",
                    "type": "uint256",
                },
                {
                    "name": "uri",
                    "type": "string",
                },
                {
                    "name": "supply",
                    "type": "uint256",
                },
                {
                    "components": [
                        {
                            "name": "account",
                            "type": "address",
                        },
                        {
                            "name": "value",
                            "type": "uint96",
                        },
                    ],
                    "name": "creators",
                    "type": "tuple[]",
                },
                {
                    "components": [
                        {
                            "name": "account",
                            "type": "address",
                        },
                        {
                            "name": "value",
                            "type": "uint96",
                        },
                    ],
                    "name": "royalties",
                    "type": "tuple[]",
                },
                {
                    "name": "signatures",
                    "type": "bytes[]"
                }
            ],
            "name": "data",
            "type": "tuple",
        },
    ],
    "name": "data",
    "type": "tuple",
};
