"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeData = void 0;
var abi_1 = require("./abi");
var id_1 = require("../common/id");
//todo wrongEncode когда применять?
function encodeData(data, wrongEncode) {
    if (wrongEncode === void 0) { wrongEncode = false; }
    switch (data.dataType) {
        case "RARIBLE_V2_DATA_V1": {
            var encoded = abi_1.abi.encodeParameter(DATA_V1_TYPE, {
                payouts: data.payouts,
                originFees: data.originFees
            });
            if (wrongEncode) {
                return [id_1.id("V1"), "0x" + encoded.substring(66)];
            }
            return [id_1.id("V1"), encoded];
        }
    }
    throw new Error("Data type not supported: " + data.dataType);
}
exports.encodeData = encodeData;
var DATA_V1_TYPE = {
    "components": [
        {
            "components": [
                {
                    "name": "account",
                    "type": "address",
                },
                {
                    "name": "value",
                    "type": "uint96",
                },
            ],
            "name": "payouts",
            "type": "tuple[]",
        },
        {
            "components": [
                {
                    "name": "account",
                    "type": "address",
                },
                {
                    "name": "value",
                    "type": "uint96",
                },
            ],
            "name": "originFees",
            "type": "tuple[]",
        },
    ],
    "name": "data",
    "type": "tuple",
};
