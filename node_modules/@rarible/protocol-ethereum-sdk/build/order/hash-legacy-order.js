"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.hashLegacyOrder = void 0;
var to_legacy_asset_type_1 = require("./to-legacy-asset-type");
var web3_1 = __importDefault(require("web3"));
var abi_1 = require("./abi");
function hashLegacyOrder(order) {
    if (order.type !== "RARIBLE_V1") {
        throw new Error("Not supported type: " + order.type);
    }
    var data = order.data;
    if (data.dataType !== "LEGACY") {
        throw new Error("Not supported data type: " + data.dataType);
    }
    var makeType = to_legacy_asset_type_1.toLegacyAssetType(order.make.assetType);
    var takeType = to_legacy_asset_type_1.toLegacyAssetType(order.take.assetType);
    var struct = {
        key: {
            owner: order.maker,
            salt: order.salt,
            sellAsset: makeType,
            buyAsset: takeType,
        },
        selling: order.make.value,
        buying: order.take.value,
        sellerFee: data.fee
    };
    return web3_1.default.utils.sha3(abi_1.abi.encodeParameter({ "Order": ORDER }, struct));
}
exports.hashLegacyOrder = hashLegacyOrder;
var ASSET = {
    "token": "address",
    "tokenId": "uint256",
    "assetType": "uint8",
};
var ORDER = {
    "key": {
        "owner": "address",
        "salt": "uint256",
        "sellAsset": ASSET,
        "buyAsset": ASSET,
    },
    "selling": "uint256",
    "buying": "uint256",
    "sellerFee": "uint256",
};
