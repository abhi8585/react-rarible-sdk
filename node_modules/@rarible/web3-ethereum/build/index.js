"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Web3Transaction = exports.Web3FunctionCall = exports.Web3Contract = exports.Web3Ethereum = void 0;
var Web3Ethereum = /** @class */ (function () {
    function Web3Ethereum(config) {
        this.config = config;
    }
    Web3Ethereum.prototype.createContract = function (abi, address) {
        return new Web3Contract(this.config, new this.config.web3.eth.Contract(abi, address));
    };
    Web3Ethereum.prototype.send = function (method, params) {
        return __awaiter(this, void 0, void 0, function () {
            var signer;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFrom()];
                    case 1:
                        signer = _a.sent();
                        return [4 /*yield*/, new Promise(function (resolve, reject) {
                                function cb(err, result) {
                                    if (err)
                                        return reject(err);
                                    if (result.error)
                                        return reject(result.error);
                                    resolve(result.result);
                                }
                                // @ts-ignore
                                return _this.config.web3.currentProvider.sendAsync({
                                    method: method,
                                    params: [signer, params[1]],
                                    signer: signer,
                                }, cb);
                            })];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Web3Ethereum.prototype.personalSign = function (message) {
        return __awaiter(this, void 0, void 0, function () {
            var signer;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFrom()];
                    case 1:
                        signer = _a.sent();
                        return [2 /*return*/, this.config.web3.eth.personal
                                .sign(message, signer)
                                .catch(function (error) {
                                if (error.code === 4001) {
                                    return Promise.reject(new Error("Cancelled"));
                                }
                                return Promise.reject(error);
                            })];
                }
            });
        });
    };
    Web3Ethereum.prototype.getFrom = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.config.from) {
                    return [2 /*return*/, this.config.from];
                }
                return [2 /*return*/, this.config.web3.eth.getAccounts().then(function (_a) {
                        var first = _a[0];
                        return first;
                    })];
            });
        });
    };
    return Web3Ethereum;
}());
exports.Web3Ethereum = Web3Ethereum;
var Web3Contract = /** @class */ (function () {
    function Web3Contract(config, contract) {
        this.config = config;
        this.contract = contract;
    }
    Web3Contract.prototype.functionCall = function (name) {
        var _a;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return new Web3FunctionCall(this.config, this.contract, (_a = this.contract.methods[name]).bind.apply(_a, __spreadArray([null], args)));
    };
    return Web3Contract;
}());
exports.Web3Contract = Web3Contract;
var Web3FunctionCall = /** @class */ (function () {
    function Web3FunctionCall(config, contract, func) {
        this.config = config;
        this.contract = contract;
        this.func = func;
    }
    Web3FunctionCall.prototype.call = function (options) {
        return this.func().call(__assign({}, options));
    };
    Web3FunctionCall.prototype.send = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var address, promiEvent, hash;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getFrom()];
                    case 1:
                        address = _a.sent();
                        promiEvent = this.func().send(__assign({ from: address, gas: this.config.gas }, options));
                        return [4 /*yield*/, new Promise((function (resolve, reject) {
                                promiEvent.on("transactionHash", resolve);
                                promiEvent.on("error", reject);
                            }))];
                    case 2:
                        hash = _a.sent();
                        return [2 /*return*/, new Web3Transaction(hash, promiEvent)];
                }
            });
        });
    };
    Web3FunctionCall.prototype.getFrom = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.config.from) {
                    return [2 /*return*/, this.config.from];
                }
                return [2 /*return*/, this.config.web3.eth.getAccounts().then(function (_a) {
                        var first = _a[0];
                        return first;
                    })];
            });
        });
    };
    return Web3FunctionCall;
}());
exports.Web3FunctionCall = Web3FunctionCall;
var Web3Transaction = /** @class */ (function () {
    function Web3Transaction(hash, promiEvent) {
        this.hash = hash;
        this.promiEvent = promiEvent;
    }
    Web3Transaction.prototype.wait = function () {
        var _this = this;
        return new Promise((function (resolve, reject) {
            _this.promiEvent.on("receipt", function (r) { return resolve(); });
            _this.promiEvent.on("error", reject);
        }));
    };
    return Web3Transaction;
}());
exports.Web3Transaction = Web3Transaction;
