import { Address } from "@rarible/types";
import { Asset } from "./Asset";
import { BigNumber } from "@rarible/types";
import { Binary } from "@rarible/types";
import { OrderDataLegacy } from "./OrderData";
import { OrderExchangeHistory } from "./OrderExchangeHistory";
import { OrderOpenSeaV1DataV1 } from "./OrderData";
import { OrderRaribleV2DataV1 } from "./OrderData";
import { Word } from "@rarible/types";
export declare type Order = LegacyOrder | RaribleV2Order | OpenSeaV1Order;
export declare type LegacyOrder = {
    type: "RARIBLE_V1";
    maker: Address;
    taker?: Address;
    make: Asset;
    take: Asset;
    fill: BigNumber;
    start?: number;
    end?: number;
    makeStock: BigNumber;
    cancelled: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    pending?: Array<OrderExchangeHistory>;
    hash: Word;
    makeBalance?: BigNumber;
    makePriceUsd?: BigNumber;
    takePriceUsd?: BigNumber;
    data: OrderDataLegacy;
};
export declare type RaribleV2Order = {
    type: "RARIBLE_V2";
    maker: Address;
    taker?: Address;
    make: Asset;
    take: Asset;
    fill: BigNumber;
    start?: number;
    end?: number;
    makeStock: BigNumber;
    cancelled: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    pending?: Array<OrderExchangeHistory>;
    hash: Word;
    makeBalance?: BigNumber;
    makePriceUsd?: BigNumber;
    takePriceUsd?: BigNumber;
    data: OrderRaribleV2DataV1;
};
export declare type OpenSeaV1Order = {
    type: "OPEN_SEA_V1";
    maker: Address;
    taker?: Address;
    make: Asset;
    take: Asset;
    fill: BigNumber;
    start?: number;
    end?: number;
    makeStock: BigNumber;
    cancelled: boolean;
    salt: Word;
    signature?: Binary;
    createdAt: string;
    lastUpdateAt: string;
    pending?: Array<OrderExchangeHistory>;
    hash: Word;
    makeBalance?: BigNumber;
    makePriceUsd?: BigNumber;
    takePriceUsd?: BigNumber;
    data: OrderOpenSeaV1DataV1;
};
