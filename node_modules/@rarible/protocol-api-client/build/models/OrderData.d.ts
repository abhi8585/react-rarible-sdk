import { Address } from "@rarible/types";
import { BigNumber } from "@rarible/types";
import { Binary } from "@rarible/types";
import { Part } from "./Part";
export declare type OrderData = OrderRaribleV2DataV1 | OrderDataLegacy | OrderOpenSeaV1DataV1;
export declare type OrderRaribleV2DataV1 = {
    dataType: "RARIBLE_V2_DATA_V1";
    payouts: Array<Part>;
    originFees: Array<Part>;
};
export declare type OrderDataLegacy = {
    dataType: "LEGACY";
    fee: number;
};
export declare type OrderOpenSeaV1DataV1_FeeMethod = "PROTOCOL_FEE" | "SPLIT_FEE";
export declare type OrderOpenSeaV1DataV1_Side = "BUY" | "SELL";
export declare type OrderOpenSeaV1DataV1_SaleKind = "FIXED_PRICE" | "DUTCH_AUCTION";
export declare type OrderOpenSeaV1DataV1_HowToCall = "CALL" | "DELEGATE_CALL";
export declare type OrderOpenSeaV1DataV1 = {
    dataType: "OPEN_SEA_V1_DATA_V1";
    exchange: Address;
    makerRelayerFee: BigNumber;
    takerRelayerFee: BigNumber;
    makerProtocolFee: BigNumber;
    takerProtocolFee: BigNumber;
    feeRecipient: Address;
    feeMethod: OrderOpenSeaV1DataV1_FeeMethod;
    side: OrderOpenSeaV1DataV1_Side;
    saleKind: OrderOpenSeaV1DataV1_SaleKind;
    howToCall: OrderOpenSeaV1DataV1_HowToCall;
    callData: Binary;
    replacementPattern: Binary;
    staticTarget: Address;
    staticExtraData: Binary;
    extra: BigNumber;
};
