/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { LazyNft, NftIndexerApiError, NftItem, NftItemMeta, NftItems } from '../models';
export interface GetNftAllItemsRequest {
    continuation?: string;
    size?: number;
    showDeleted?: boolean;
    lastUpdatedFrom?: number;
    lastUpdatedTo?: number;
    includeMeta?: boolean;
}
export interface GetNftItemByIdRequest {
    itemId: string;
    includeMeta?: boolean;
}
export interface GetNftItemMetaByIdRequest {
    itemId: string;
}
export interface GetNftItemsByCollectionRequest {
    collection: string;
    continuation?: string;
    size?: number;
    includeMeta?: boolean;
}
export interface GetNftItemsByCreatorRequest {
    creator: string;
    continuation?: string;
    size?: number;
    includeMeta?: boolean;
}
export interface GetNftItemsByOwnerRequest {
    owner: string;
    continuation?: string;
    size?: number;
    includeMeta?: boolean;
}
export interface GetNftLazyItemByIdRequest {
    itemId: string;
}
/**
 * no description
 */
export declare class NftItemControllerApi extends runtime.BaseAPI {
    /**
     */
    getNftAllItemsRaw(requestParameters: GetNftAllItemsRequest): Promise<GetNftAllItemsResponse>;
    /**
     */
    getNftAllItems(requestParameters: GetNftAllItemsRequest): Promise<NftItems>;
    /**
     * returns Item by identifier
     */
    getNftItemByIdRaw(requestParameters: GetNftItemByIdRequest): Promise<GetNftItemByIdResponse>;
    /**
     * returns Item by identifier
     */
    getNftItemById(requestParameters: GetNftItemByIdRequest): Promise<NftItem>;
    /**
     */
    getNftItemMetaByIdRaw(requestParameters: GetNftItemMetaByIdRequest): Promise<GetNftItemMetaByIdResponse>;
    /**
     */
    getNftItemMetaById(requestParameters: GetNftItemMetaByIdRequest): Promise<NftItemMeta>;
    /**
     */
    getNftItemsByCollectionRaw(requestParameters: GetNftItemsByCollectionRequest): Promise<GetNftItemsByCollectionResponse>;
    /**
     */
    getNftItemsByCollection(requestParameters: GetNftItemsByCollectionRequest): Promise<NftItems>;
    /**
     */
    getNftItemsByCreatorRaw(requestParameters: GetNftItemsByCreatorRequest): Promise<GetNftItemsByCreatorResponse>;
    /**
     */
    getNftItemsByCreator(requestParameters: GetNftItemsByCreatorRequest): Promise<NftItems>;
    /**
     */
    getNftItemsByOwnerRaw(requestParameters: GetNftItemsByOwnerRequest): Promise<GetNftItemsByOwnerResponse>;
    /**
     */
    getNftItemsByOwner(requestParameters: GetNftItemsByOwnerRequest): Promise<NftItems>;
    /**
     */
    getNftLazyItemByIdRaw(requestParameters: GetNftLazyItemByIdRequest): Promise<GetNftLazyItemByIdResponse>;
    /**
     */
    getNftLazyItemById(requestParameters: GetNftLazyItemByIdRequest): Promise<LazyNft>;
}
export declare type GetNftAllItems200 = {
    status: 200;
    value: NftItems;
};
export declare type GetNftAllItems500 = {
    status: 500;
    value: NftIndexerApiError;
};
export declare type GetNftAllItemsResponse = GetNftAllItems200 | GetNftAllItems500;
export declare type GetNftItemById200 = {
    status: 200;
    value: NftItem;
};
export declare type GetNftItemById404 = {
    status: 404;
    value: NftIndexerApiError;
};
export declare type GetNftItemById500 = {
    status: 500;
    value: NftIndexerApiError;
};
export declare type GetNftItemByIdResponse = GetNftItemById200 | GetNftItemById404 | GetNftItemById500;
export declare type GetNftItemMetaById200 = {
    status: 200;
    value: NftItemMeta;
};
export declare type GetNftItemMetaById500 = {
    status: 500;
    value: NftIndexerApiError;
};
export declare type GetNftItemMetaByIdResponse = GetNftItemMetaById200 | GetNftItemMetaById500;
export declare type GetNftItemsByCollection200 = {
    status: 200;
    value: NftItems;
};
export declare type GetNftItemsByCollection500 = {
    status: 500;
    value: NftIndexerApiError;
};
export declare type GetNftItemsByCollectionResponse = GetNftItemsByCollection200 | GetNftItemsByCollection500;
export declare type GetNftItemsByCreator200 = {
    status: 200;
    value: NftItems;
};
export declare type GetNftItemsByCreator500 = {
    status: 500;
    value: NftIndexerApiError;
};
export declare type GetNftItemsByCreatorResponse = GetNftItemsByCreator200 | GetNftItemsByCreator500;
export declare type GetNftItemsByOwner200 = {
    status: 200;
    value: NftItems;
};
export declare type GetNftItemsByOwner500 = {
    status: 500;
    value: NftIndexerApiError;
};
export declare type GetNftItemsByOwnerResponse = GetNftItemsByOwner200 | GetNftItemsByOwner500;
export declare type GetNftLazyItemById200 = {
    status: 200;
    value: LazyNft;
};
export declare type GetNftLazyItemById404 = {
    status: 404;
    value: NftIndexerApiError;
};
export declare type GetNftLazyItemById500 = {
    status: 500;
    value: NftIndexerApiError;
};
export declare type GetNftLazyItemByIdResponse = GetNftLazyItemById200 | GetNftLazyItemById404 | GetNftLazyItemById500;
